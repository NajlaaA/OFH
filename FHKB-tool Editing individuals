
import java.util.*;
import javax.swing.*;
import java.io.*;
import java.awt.*;
import org.semanticweb.owlapi.model.*;
import org.semanticweb.owlapi.apibinding.OWLManager;
import com.clarkparsia.pellet.owlapiv3.PelletReasoner;
import com.clarkparsia.pellet.owlapiv3.PelletReasonerFactory;
import uk.ac.manchester.cs.jfact.JFactReasoner;
import uk.ac.manchester.cs.jfact.JFactFactory;
import org.semanticweb.owlapi.reasoner.OWLReasoner;



import java.awt.event.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.BadLocationException;

public class LoadOntology extends javax.swing.JFrame implements ActionListener{

   static String moFirst, moLast, moBirth, moDeath, moLabel;
  public String x;
    OWLOntology ont;
    String ontologyID="";
   IRI lin;
   OWLOntologyManager manager;
   OWLDataFactory df = OWLManager.getOWLDataFactory();
   String label1,fath,moth,fullLabel;
   OWLIndividual mat;
   OWLClass Person= df.getOWLClass(IRI.create("http://www.owl.cs.manchester.ac.uk/ontologies/fhkb.owl#Person"));
   OWLClass Man= df.getOWLClass(IRI.create("http://www.owl.cs.manchester.ac.uk/ontologies/fhkb.owl#Man"));
   OWLClass Woman= df.getOWLClass(IRI.create("http://www.owl.cs.manchester.ac.uk/ontologies/fhkb.owl#Woman"));
   OWLObjectProperty hasFather= df.getOWLObjectProperty(IRI.create("http://www.owl.cs.manchester.ac.uk/ontologies/fhkb.owl#hasFather"));
   OWLObjectProperty hasMother= df.getOWLObjectProperty(IRI.create("http://www.owl.cs.manchester.ac.uk/ontologies/fhkb.owl#hasMother"));
   OWLDataProperty hasBirthYear= df.getOWLDataProperty(IRI.create("http://www.owl.cs.manchester.ac.uk/ontologies/fhkb.owl#hasBirthYear"));
   OWLDataProperty hasDeathYear= df.getOWLDataProperty(IRI.create("http://www.owl.cs.manchester.ac.uk/ontologies/fhkb.owl#hasDeathYear"));
   OWLDataProperty hasFirstName= df.getOWLDataProperty(IRI.create("http://www.owl.cs.manchester.ac.uk/ontologies/fhkb.owl#hasFirstGivenName"));
   OWLDataProperty hasFamilyName= df.getOWLDataProperty(IRI.create("http://www.owl.cs.manchester.ac.uk/ontologies/fhkb.owl#hasFamilyName"));
   DefaultListModel model= new DefaultListModel();
   
   String[] firstNames =new String[1000];
   String[] lastNames =new String[1000];
   String[] birthYears =new String[1000];
   String[] deathYears =new String[1000];
   int count=0;
   
    public LoadOntology() {
        initComponents();     
      
      
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fName = new javax.swing.JTextField();
        birth = new javax.swing.JTextField();
        death = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        LName = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        fatherBirth = new javax.swing.JTextField();
        fatherName = new javax.swing.JTextField();
        fatherLast = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        motherName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        motherBirth = new javax.swing.JTextField();
        motherLast = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list1 = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        fNew = new javax.swing.JMenuItem();
        fOpen = new javax.swing.JMenu();
        FhMin = new javax.swing.JMenuItem();
        FhCore = new javax.swing.JMenuItem();
        FhMax = new javax.swing.JMenuItem();
        fSave = new javax.swing.JMenuItem();
        fSaveAs = new javax.swing.JMenuItem();
        fExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        factPlus = new javax.swing.JRadioButtonMenuItem();
        hermit = new javax.swing.JRadioButtonMenuItem();
        pellet = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FHKB Creator and Editor");

        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Add individuals"));

        jButton6.setText("Add");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Individual:"));

        jLabel2.setText("First Name");

        jLabel3.setText("Last Name");

        jLabel4.setText("Year of Birth");

        fName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fNameActionPerformed(evt);
            }
        });

        death.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deathActionPerformed(evt);
            }
        });

        jLabel5.setText("Year of Death");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(birth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(death, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {LName, birth, death, fName});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(birth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(death, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {LName, birth, death, fName});

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Individual's Father:"));

        jLabel8.setText("Year of Birth");

        jLabel1.setText(" Last Name");

        jLabel9.setText("Year of Death");

        jLabel13.setText("First Name");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(fatherName, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(fatherBirth)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)))
                .addGap(13, 13, 13)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fatherLast)
                    .addComponent(jTextField1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {fatherBirth, fatherLast, fatherName});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(fatherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(fatherLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(fatherBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 20, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Individual's Mother:"));

        jLabel7.setText("First  Name");

        jLabel11.setText("Year of Birth");

        jLabel12.setText("Year of Death");

        jLabel10.setText("Last Name");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(motherBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(motherName, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(motherLast, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextField5, motherBirth, motherLast, motherName});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(motherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(motherLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(motherBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Individuals List"));

        jScrollPane1.setViewportView(list1);

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Add father");

        jButton4.setText("Add mother");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addGap(16, 16, 16)
                        .addComponent(jButton4)
                        .addGap(0, 6, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        jButton1.setText("Exit");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 48, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Adding", jPanel2);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 788, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 543, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab4", jPanel6);

        jMenu1.setText("File");

        fNew.setText("New");
        jMenu1.add(fNew);

        fOpen.setText("Open");
        fOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fOpenActionPerformed(evt);
            }
        });

        FhMin.setText("FHKB Minimum Classes");
        FhMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FhMinActionPerformed(evt);
            }
        });
        fOpen.add(FhMin);

        FhCore.setText("FHKB Core Classes");
        FhCore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FhCoreActionPerformed(evt);
            }
        });
        fOpen.add(FhCore);

        FhMax.setText("FHKB Most Classes");
        FhMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FhMaxActionPerformed(evt);
            }
        });
        fOpen.add(FhMax);

        jMenu1.add(fOpen);

        fSave.setText("Save");
        jMenu1.add(fSave);

        fSaveAs.setText("Save as");
        jMenu1.add(fSaveAs);

        fExit.setText("Exit");
        jMenu1.add(fExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem6.setText("Add new individual");
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Add individual's father");
        jMenu2.add(jMenuItem7);

        jMenuItem8.setText("Add individual's mother");
        jMenu2.add(jMenuItem8);

        jMenuItem9.setText("Add marriage");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem10.setText("Add partner");
        jMenu2.add(jMenuItem10);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Reasoner");

        jMenuItem11.setText("Start reasoner");
        jMenu3.add(jMenuItem11);

        jMenuItem12.setText("Stop reasoner");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem12);
        jMenu3.add(jSeparator1);

        factPlus.setSelected(true);
        factPlus.setText("FaCT++");
        factPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factPlusActionPerformed(evt);
            }
        });
        jMenu3.add(factPlus);

        hermit.setText("HermiT 1.3.8");
        hermit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hermitActionPerformed(evt);
            }
        });
        jMenu3.add(hermit);

        pellet.setText("Pellet");
        pellet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pelletActionPerformed(evt);
            }
        });
        jMenu3.add(pellet);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("View");

        jMenuItem13.setText("individual's information view");
        jMenu4.add(jMenuItem13);

        jMenuItem14.setText("Family tree view");
        jMenu4.add(jMenuItem14);

        jMenuItem15.setText("Query view");
        jMenu4.add(jMenuItem15);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>                        

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void FhMinActionPerformed(java.awt.event.ActionEvent evt) {                                      
        model.removeAllElements();
        ontologyID="min";
        try{
            manager = OWLManager.createOWLOntologyManager();
            File file1 = new File("C://Users/najla/Desktop/MSc project/OWL API/fhkb-minimumclasses-noabox.owl");
            ont = manager.loadOntologyFromOntologyDocument(file1);
            lin= IRI.create(file1);
           
        }catch(OWLOntologyCreationException e )
        {
        System.err.println("OWLOntologyCreationException: " + e.getMessage()); 
        }
    }                                     

    private void fOpenActionPerformed(java.awt.event.ActionEvent evt) {                                      
        
    }                                     

    private void FhCoreActionPerformed(java.awt.event.ActionEvent evt) {                                       
        model.removeAllElements();
        ontologyID="core";   
        try{
             manager = OWLManager.createOWLOntologyManager();
            File file1 = new File("C://Users/najla/Desktop/MSc project/OWL API/fhkb-coreclasses-noabox.owl");
            ont = manager.loadOntologyFromOntologyDocument(file1);
            
           
        }catch(OWLOntologyCreationException e )
        {
        System.err.println("OWLOntologyCreationException: " + e.getMessage()); 
        }
    }                                      

    private void FhMaxActionPerformed(java.awt.event.ActionEvent evt) {                                      
        model.removeAllElements();
        ontologyID="most";
        try{
             manager = OWLManager.createOWLOntologyManager();
            File file1 = new File("C://Users/najla/Desktop/MSc project/OWL API/fhkb-mostclasses-noabox.owl");
            ont = manager.loadOntologyFromOntologyDocument(file1);
            
        }catch(OWLOntologyCreationException e )
        {
        System.err.println("OWLOntologyCreationException: " + e.getMessage()); 
        }
    }                                     

    private void hermitActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // Now, we instantiate HermiT by creating an instance of the Reasoner class in the package org.semanticweb.HermiT.
         org.semanticweb.HermiT.Reasoner hermit=new org.semanticweb.HermiT.Reasoner(ont);
        // Finally, we output whether the ontology is consistent.
        System.out.println(hermit.isConsistent());
    }                                      

    private void pelletActionPerformed(java.awt.event.ActionEvent evt) {                                       
        
        PelletReasonerFactory reasonerFactory = new PelletReasonerFactory();
        PelletReasoner r = reasonerFactory.createReasoner(ont);
        //PelletReasoner Preasoner = PelletReasonerFactory.getInstance().createNonBufferingReasoner( ont );
        //manager.addOntologyChangeListener( Preasoner );
        System.out.println(r.isConsistent());

    }                                      

    private void factPlusActionPerformed(java.awt.event.ActionEvent evt) {                                         
      OWLReasoner reasoner;
      JFactFactory factory = new JFactFactory();
            reasoner = factory.createReasoner(ont);
      System.out.println(reasoner.isConsistent());
    }                                        

    private void deathActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void fNameActionPerformed(java.awt.event.ActionEvent evt) {                                      
       
    }                                     

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        label1=fName.getText()+"_"+LName.getText()+"_"+birth.getText();

        fath=fatherName.getText()+"_"+fatherLast.getText()+"_"+fatherBirth.getText();

        moth= motherName.getText()+"_"+motherLast.getText()+"_"+motherBirth.getText();
        
          OWLIndividual matt = df.getOWLNamedIndividual(IRI.create(lin + "#"+label1));
          OWLClassAssertionAxiom classAssertion = df.getOWLClassAssertionAxiom(Person, matt);
          //AddAxiom addAxiom = new AddAxiom(ont, classAssertion);
          manager.addAxiom(ont, classAssertion);
       
        if(!(model.contains(label1)) )
        {  
          model.addElement(label1);
          
          //Creating String arrays for AutoComplete textfields
          firstNames[count]= fName.getText();
          lastNames[count]= LName.getText();
          birthYears[count]= birth.getText();
          count++;
          new AutoTextField(fName, firstNames);
          new AutoTextField(LName, lastNames);
          new AutoTextField(birth, birthYears);
        
          OWLAxiom asser1= df.getOWLDataPropertyAssertionAxiom(hasFirstName, matt, fName.getText());
          manager.addAxiom(ont,asser1);
          OWLAxiom asser2= df.getOWLDataPropertyAssertionAxiom(hasFamilyName, matt, LName.getText());
          manager.addAxiom(ont,asser2);
          OWLAxiom asser3= df.getOWLDataPropertyAssertionAxiom(hasBirthYear, matt, birth.getText());
          manager.addAxiom(ont,asser3);
        }
        else
            JOptionPane.showMessageDialog(new JFrame(), "The individual is already exist", "Dialog",
        JOptionPane.INFORMATION_MESSAGE);

        if(!fatherName.getText().isEmpty()){
            
            if(!(model.contains(fath))){
            model.addElement(fath);
            
            //Creating String arrays for AutoComplete textfields
            firstNames[count]= fatherName.getText();
            lastNames[count]= fatherLast.getText();
            birthYears[count]= fatherBirth.getText();
            count++;
            new AutoTextField(fatherName, firstNames);
            new AutoTextField(fatherLast, lastNames);
            new AutoTextField(fatherBirth, birthYears);}
          
            OWLIndividual father = df.getOWLNamedIndividual(IRI.create(lin + "#"+fath));
            OWLClassAssertionAxiom classAssertion2 = df.getOWLClassAssertionAxiom(Man, father);
            manager.addAxiom(ont, classAssertion2);
            

            OWLAxiom assertion1 = df.getOWLObjectPropertyAssertionAxiom(hasFather, matt, father);
            manager.addAxiom(ont, assertion1);
            OWLAxiom asser4= df.getOWLDataPropertyAssertionAxiom(hasFirstName, father, fatherName.getText());
            manager.addAxiom(ont,asser4);
            OWLAxiom asser5= df.getOWLDataPropertyAssertionAxiom(hasFamilyName, father, fatherLast.getText());
            manager.addAxiom(ont,asser5);
            OWLAxiom asser6= df.getOWLDataPropertyAssertionAxiom(hasBirthYear, father, fatherBirth.getText());
            manager.addAxiom(ont,asser6);
        }

        if(!motherName.getText().isEmpty() ){
            if(!(model.contains(moth)))
            {
                model.addElement(moth);
            //Creating String arrays for AutoComplete textfields
            firstNames[count]= motherName.getText();
            lastNames[count]= motherLast.getText();
            birthYears[count]= motherBirth.getText();
            count++;
            new AutoTextField(motherName, firstNames);
            new AutoTextField(motherLast, lastNames);
            new AutoTextField(motherBirth, birthYears);
            }
            
            OWLIndividual mother = df.getOWLNamedIndividual(IRI.create(lin + "#"+moth));
            OWLClassAssertionAxiom classAssertion3 = df.getOWLClassAssertionAxiom(Woman, mother);
            manager.addAxiom(ont, classAssertion3);

            OWLAxiom assertion2 = df.getOWLObjectPropertyAssertionAxiom(hasMother, matt, mother);
            manager.addAxiom(ont, assertion2);
            OWLAxiom asser7= df.getOWLDataPropertyAssertionAxiom(hasFirstName, mother, motherName.getText());
            manager.addAxiom(ont,asser7);
            OWLAxiom asser8= df.getOWLDataPropertyAssertionAxiom(hasFamilyName, mother, motherLast.getText());
            manager.addAxiom(ont,asser8);
            OWLAxiom asser9= df.getOWLDataPropertyAssertionAxiom(hasBirthYear, mother, motherBirth.getText());
            manager.addAxiom(ont,asser9);
        }
        list1.setModel(model);

        // We now use the manager to apply the change
        //manager.applyChange(addAxiom);
        
        try {

            manager.saveOntology(ont);
        } catch (OWLOntologyStorageException ex) {
            Logger.getLogger(LoadOntology.class.getName()).log(Level.SEVERE, null, ex);
        }
         fName.setText("");  LName.setText("");  birth.setText("");
        fatherName.setText("");  fatherLast.setText("");  fatherBirth.setText("");
        motherName.setText("");  motherLast.setText("");   motherBirth.setText("");
    }                                        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
       
       String first="", last="", bir="", dea="";
       OWLIndividual mama=null, dada=null;
       String label2= (String)list1.getSelectedValue();
       OWLIndividual ind = df.getOWLNamedIndividual(IRI.create(lin + "#"+label2));
       
      Set<OWLLiteral> FN= ind.getDataPropertyValues(hasFirstName, ont);
       for(OWLLiteral f:FN)
           first=f.getLiteral();
       
       Set<OWLLiteral> LN= ind.getDataPropertyValues(hasFamilyName, ont);
       for(OWLLiteral l:LN)
           last=l.getLiteral();
       
       Set<OWLLiteral> BY= ind.getDataPropertyValues(hasBirthYear, ont);
       for(OWLLiteral b:BY)
           bir=b.getLiteral();
       
       Set<OWLLiteral> DY= ind.getDataPropertyValues(hasDeathYear, ont);
       for(OWLLiteral d:DY)
           dea=d.getLiteral();
       
       Set<OWLIndividual> mom= ind.getObjectPropertyValues(hasMother, ont);
       for(OWLIndividual m:mom)
           mama=m;
       String mLabel = mama.getSignature().toString();
       String[] parts= mLabel.split("#");
       String part=parts[1];
       String motherLabel= part.substring(0,part.length()-2);
       System.out.println("mom lab:"+motherLabel);
       
       Set<OWLIndividual> dad= ind.getObjectPropertyValues(hasFather, ont);
       for(OWLIndividual d:dad)
           dada=d;
       String dLabel = dada.getSignature().toString();
       String[] parts2= dLabel.split("#");
       String part2=parts2[1];
       String fatherLabel= part2.substring(0,part2.length()-2);
       System.out.println("dad lab:"+fatherLabel);
       
      EditIndividual editFrame= new EditIndividual();
       editFrame.setVisible(true);
       editFrame.setValues(ontologyID,label2,first,last,bir, dea,motherLabel,fatherLabel);
       
     
    }                                        

    /**
     * @param args the command line arguments
     */
    public void setModifyValues(String ontID,String indLabel,String a,String b, String c, String d, String Emother,String Efather )
    {
      moFirst=a;
      moLast=b;
      moBirth=c;
      moDeath=d;
      //to delete previous label
      String preLabel= indLabel;
      moLabel=moFirst+"_"+moLast+"_"+moBirth;
      System.out.println(a+"  "+b+"  "+c+" "+d+"_"+indLabel+"???"+moLabel);
      moLabel=moFirst+"_"+moLast+"_"+moBirth;
      
      //Load ontolgy again
     if(ontID.equals("min"))
     { try{
            manager = OWLManager.createOWLOntologyManager();
            File file1 = new File("C://Users/najla/Desktop/MSc project/OWL API/fhkb-minimumclasses-noabox.owl");
            ont = manager.loadOntologyFromOntologyDocument(file1);
            lin= IRI.create(file1);
           
          }catch(OWLOntologyCreationException e )
          {
          System.err.println("OWLOntologyCreationException: " + e.getMessage()); 
          }
     }
      else if(ontologyID.equals("core"))
      {
          try{
             manager = OWLManager.createOWLOntologyManager();
            File file1 = new File("C://Users/najla/Desktop/MSc project/OWL API/fhkb-coreclasses-noabox.owl");
            ont = manager.loadOntologyFromOntologyDocument(file1);
            
           
        }catch(OWLOntologyCreationException e )
        {
        System.err.println("OWLOntologyCreationException: " + e.getMessage()); 
        }
      }
      else if(ontologyID.equals("most"))
      {
          try{
             manager = OWLManager.createOWLOntologyManager();
            File file1 = new File("C://Users/najla/Desktop/MSc project/OWL API/fhkb-mostclasses-noabox.owl");
            ont = manager.loadOntologyFromOntologyDocument(file1);
            
        }catch(OWLOntologyCreationException e )
        {
        System.err.println("OWLOntologyCreationException: " + e.getMessage()); 
        }
      }
      OWLIndividual ind = df.getOWLNamedIndividual(IRI.create(lin +"#"+moLabel));
      OWLClassAssertionAxiom classAssertion11 = df.getOWLClassAssertionAxiom(Person, ind);
      manager.addAxiom(ont, classAssertion11);
      //Adding new data property
       OWLAxiom asser11= df.getOWLDataPropertyAssertionAxiom(hasFirstName, ind, a);
          manager.addAxiom(ont,asser11);
          OWLAxiom asser22= df.getOWLDataPropertyAssertionAxiom(hasFamilyName, ind, moLast);
          manager.addAxiom(ont,asser22);
          OWLAxiom asser33= df.getOWLDataPropertyAssertionAxiom(hasBirthYear, ind, moBirth);
          manager.addAxiom(ont,asser33);
          
       //Adding father 
          OWLIndividual indFather = df.getOWLNamedIndividual(IRI.create(lin + "#"+Efather));
          OWLAxiom assertion88 = df.getOWLObjectPropertyAssertionAxiom(hasFather, ind, indFather);
          manager.addAxiom(ont, assertion88);
       //Adding mother
          OWLIndividual indMother = df.getOWLNamedIndividual(IRI.create(lin + "#"+Emother));
          OWLAxiom assertion99 = df.getOWLObjectPropertyAssertionAxiom(hasMother, ind, indMother);
          manager.addAxiom(ont, assertion99);
            
       try {

            manager.saveOntology(ont);
        } catch (OWLOntologyStorageException ex) {
            Logger.getLogger(LoadOntology.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoadOntology.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoadOntology.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoadOntology.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoadOntology.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoadOntology().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify                     
    private javax.swing.JMenuItem FhCore;
    private javax.swing.JMenuItem FhMax;
    private javax.swing.JMenuItem FhMin;
    private javax.swing.JTextField LName;
    private javax.swing.JTextField birth;
    private javax.swing.JTextField death;
    private javax.swing.JMenuItem fExit;
    private javax.swing.JTextField fName;
    private javax.swing.JMenuItem fNew;
    private javax.swing.JMenu fOpen;
    private javax.swing.JMenuItem fSave;
    private javax.swing.JMenuItem fSaveAs;
    private javax.swing.JRadioButtonMenuItem factPlus;
    private javax.swing.JTextField fatherBirth;
    private javax.swing.JTextField fatherLast;
    private javax.swing.JTextField fatherName;
    private javax.swing.JRadioButtonMenuItem hermit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JList list1;
    private javax.swing.JTextField motherBirth;
    private javax.swing.JTextField motherLast;
    private javax.swing.JTextField motherName;
    private javax.swing.JMenuItem pellet;
    // End of variables declaration                   

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}



/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
public class EditIndividual extends javax.swing.JFrame {

    /**
     * Creates new form EditIndividual
     */
    String first1="",last1="",birth1="",death1="";
    String ontID, mother, father;
    String label=" ";
    public EditIndividual() {
        initComponents();
    }
    
    public void setValues(String ontologyID,String lab,String first, String last, String birth, String death, String mLabel, String fLabel)
    {
      jTextField1.setText(first);
      jTextField2.setText(last);
      jTextField3.setText(birth);
      jTextField4.setText(death);
      ontID= ontologyID;
      label=lab;
      mother= mLabel;
      father= fLabel;
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Edit Individual");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Individual Information"));

        jLabel3.setText("Year of Birth:");

        jLabel2.setText("Last Name:");

        jLabel4.setText("Year of Death:");

        jLabel1.setText("First Name:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(jTextField3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                    .addComponent(jTextField2))
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        jButton1.setText("Modify");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
     
        first1= jTextField1.getText();
        last1= jTextField2.getText();
        birth1=jTextField3.getText();
        death1=jTextField4.getText();
        
        LoadOntology A =new LoadOntology();
       
        A.setModifyValues(ontID,label,first1,last1, birth1, death1, mother,father);
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditIndividual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditIndividual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditIndividual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditIndividual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditIndividual().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration                   
}

////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JTextField;
import javax.swing.text.BadLocationException;
public class AutoTextField {
    
        JTextField textField;
        String[]vector;
       
        public AutoTextField(JTextField textField, String[]vector)
        {
            this.textField=textField;
            this.textField.addKeyListener(new keyforString(this.textField, vector));
            this.vector=vector;
           
        }

        private class keyforString extends KeyAdapter
        {
            String[] data = new String[]{"-"};
            JTextField textField;
            public keyforString(JTextField txt, String[]data)
            {
                this.textField=txt;
                this.data= data;
                textField.addKeyListener(this);
            }
            public void keyReleased(KeyEvent e)
            {
                if (!(e.getKeyCode() >= 65 && e.getKeyCode() <= 90 || e.getKeyCode() >= 96 && e.getKeyCode() <= 105 || e.getKeyCode() == e.VK_ENTER))
                    return;
                if (textField.getText().isEmpty())
                    return;
                if (data.length==0)
                    return;
                addTextAndSelectToTextFieldToRest(textField, getTextFromVector(textField.getText(), data));
            }
        }


    
    public static void addTextAndSelectToTextFieldToRest(JTextField textField, String newData)
    {
        String SearchedItem="";
        int Actual=textField.getText().length();
        

        SearchedItem = newData.substring(Actual, newData.length());
        if (newData.isEmpty() || SearchedItem.isEmpty()) {
            return;
        }

        try
        {
            textField.getDocument().insertString(textField.getCaretPosition(), SearchedItem, null);
        } catch (BadLocationException ex) {
            ex.printStackTrace();
        }
        textField.select(Actual, textField.getText().length());
        
    }
    
    public static String getTextFromVector(String dataSearch, String[]items)
    {

        int position = getPosition(dataSearch, items);
        if (position==-1)
            return dataSearch;
        return items[position];
    }
    public static int getPosition(String dataS, String[]items)
    {
        try {
            for (int i = 0; i < items.length; i++)
                if (dataS.equals(items[i].substring(0, dataS.length())))
                    return i;
        } catch (Exception e) {
            return -1;
        }
        return -1;
    }
}

    


    

