package pkgtry.ontology;

/**
 *
 * @author najla
 */
import java.io.*;
import org.semanticweb.owlapi.model.*;
import org.semanticweb.owlapi.apibinding.OWLManager;
import org.semanticweb.owlapi.vocab.OWLRDFVocabulary;
import java.io.File;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import org.semanticweb.owlapi.model.*;
import org.semanticweb.owlapi.apibinding.OWLManager;

public class TryOntology {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws OWLOntologyCreationException{
        OWLOntologyManager manager = OWLManager.createOWLOntologyManager();
         File file = new File("C://Users/najla/Desktop/MSc project/Programming/Luky.owl");
      OWLOntology x = manager.loadOntologyFromOntologyDocument(file);
      IRI lin= IRI.create(file);
      //System.out.println("Loaded ontology: " + coreclasses);
      OWLDataFactory df = OWLManager.getOWLDataFactory();
      ///////////////////////////////////////////////////////
      ///////////////////////////////////////////////////////
      OWLClass clsA = df.getOWLClass(IRI.create(lin+ "#A"));
      OWLClass clsB = df.getOWLClass(IRI.create(lin + "#B"));
      // Now create the axiom
      OWLAxiom axiom = df.getOWLSubClassOfAxiom(clsA, clsB);
      // add the axiom to the ontology.
      AddAxiom addAxiom = new AddAxiom(x, axiom);
      //////////////////////////////////////////////////
      //////////////////////////////////////////////////
      OWLIndividual matthew = df.getOWLNamedIndividual(IRI.create(lin + "#matthew"));
      OWLClassAssertionAxiom classAssertion = df.getOWLClassAssertionAxiom(clsA, matthew);
      manager.addAxiom(x, classAssertion);
       // We now use the manager to apply the change
      manager.applyChange(addAxiom);
      /////////////////////////////////////////////////////
      /////////////////////////////////////////////////////
      OWLDataProperty hasAge = df.getOWLDataProperty(IRI.create(lin + "#hasAge"));
      OWLAxiom assertion = df.getOWLDataPropertyAssertionAxiom(hasAge, matthew, 18);
      AddAxiom addAxiom2 = new AddAxiom(x, assertion);
      manager.applyChange(addAxiom2);
    try {
    //File file1 = new File("/tmp/local.owl");
    //manager.saveOntology(coreclasses, IRI.create(file1.toURI()));
    manager.saveOntology(x);
        } catch (OWLOntologyStorageException ex) {
            Logger.getLogger(TryOntology.class.getName()).log(Level.SEVERE, null, ex);
        }

      
    }
    
}
