import java.util.*;
import javax.swing.*;
import java.io.*;
import java.awt.*;
import org.semanticweb.owlapi.model.*;
import org.semanticweb.owlapi.apibinding.OWLManager;

import java.awt.event.*;

public class LoadOntology extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form LoadOntology
     */
   DefaultListModel model= new DefaultListModel();
    public LoadOntology() {
        initComponents();     
      // JFrame f2= new JFrame("Hello");
      // f2.setSize(600, 300);
      // fOpen.addActionListener(new ActionListener(){
         //   public void actionPerformed(ActionEvent e){
          //          f2.setVisible(true);
          //  }});
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        list1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        fNew = new javax.swing.JMenuItem();
        fOpen = new javax.swing.JMenu();
        FhMin = new javax.swing.JMenuItem();
        FhCore = new javax.swing.JMenuItem();
        FhMax = new javax.swing.JMenuItem();
        fSave = new javax.swing.JMenuItem();
        fSaveAs = new javax.swing.JMenuItem();
        fExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        jScrollPane1.setViewportView(list1);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel1.setText("Individuals List:");

        jButton1.setText("Add new individual");

        jButton2.setText("Add individual's father");

        jButton3.setText("Add individual's mother");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Add Partner");

        jButton5.setText("Delete individual");

        jMenu1.setText("File");

        fNew.setText("New");
        jMenu1.add(fNew);

        fOpen.setText("Open");
        fOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fOpenActionPerformed(evt);
            }
        });

        FhMin.setText("FHKB Minimum Classes");
        FhMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FhMinActionPerformed(evt);
            }
        });
        fOpen.add(FhMin);

        FhCore.setText("FHKB Core Classes");
        FhCore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FhCoreActionPerformed(evt);
            }
        });
        fOpen.add(FhCore);

        FhMax.setText("FHKB Most Classes");
        FhMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FhMaxActionPerformed(evt);
            }
        });
        fOpen.add(FhMax);

        jMenu1.add(fOpen);

        fSave.setText("Save");
        jMenu1.add(fSave);

        fSaveAs.setText("Save as");
        jMenu1.add(fSaveAs);

        fExit.setText("Exit");
        jMenu1.add(fExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem6.setText("Add new individual");
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Add individual's father");
        jMenu2.add(jMenuItem7);

        jMenuItem8.setText("Add individual's mother");
        jMenu2.add(jMenuItem8);

        jMenuItem9.setText("Add marriage");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem10.setText("Add partner");
        jMenu2.add(jMenuItem10);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Reasoner");

        jMenuItem11.setText("Start reasoner");
        jMenu3.add(jMenuItem11);

        jMenuItem12.setText("Stop reasoner");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem12);
        jMenu3.add(jSeparator1);

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("FaCT++");
        jMenu3.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem2.setText("HermiT 1.3.8");
        jMenu3.add(jRadioButtonMenuItem2);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("View");

        jMenuItem13.setText("individual's information view");
        jMenu4.add(jMenuItem13);

        jMenuItem14.setText("Family tree view");
        jMenu4.add(jMenuItem14);

        jMenuItem15.setText("Query view");
        jMenu4.add(jMenuItem15);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void FhMinActionPerformed(java.awt.event.ActionEvent evt) {                                      
        model.removeAllElements();
        try{
            OWLOntologyManager manager = OWLManager.createOWLOntologyManager();
            File file1 = new File("C://Users/najla/Desktop/MSc project/OWL API/fhkb-minimumclasses-noabox.owl");
            OWLOntology minClasses = manager.loadOntologyFromOntologyDocument(file1);
            model.addElement("List of Classes:");
            for (OWLClass cls1 : minClasses.getClassesInSignature())
            {  
                model.addElement(String.valueOf(cls1.getIRI().getFragment()));
             } 
            model.addElement("List of Propereties:");
            for(OWLObjectProperty o: minClasses.getObjectPropertiesInSignature()){
                model.addElement(String.valueOf(o.getIRI().getFragment()));
            }
            list1.setModel(model);
        }catch(OWLOntologyCreationException e )
        {
        System.err.println("OWLOntologyCreationException: " + e.getMessage()); 
        }
    }                                     

    private void fOpenActionPerformed(java.awt.event.ActionEvent evt) {                                      
        
    }                                     

    private void FhCoreActionPerformed(java.awt.event.ActionEvent evt) {                                       
        model.removeAllElements();
        try{
            OWLOntologyManager manager = OWLManager.createOWLOntologyManager();
            File file1 = new File("C://Users/najla/Desktop/MSc project/OWL API/fhkb-coreclasses-noabox.owl");
            OWLOntology coreClasses = manager.loadOntologyFromOntologyDocument(file1);
            model.addElement("List of Classes:");
            for (OWLClass cls : coreClasses.getClassesInSignature())
            {   model.addElement(String.valueOf(cls.getIRI().getFragment()));
                list1.setModel(model);
             } 
            model.addElement("List of Propereties:");
            for(OWLObjectProperty o: coreClasses.getObjectPropertiesInSignature()){
                model.addElement(String.valueOf(o.getIRI().getFragment()));
                list1.setModel(model);
            }
        }catch(OWLOntologyCreationException e )
        {
        System.err.println("OWLOntologyCreationException: " + e.getMessage()); 
        }
    }                                      

    private void FhMaxActionPerformed(java.awt.event.ActionEvent evt) {                                      
        model.removeAllElements();
        try{
            OWLOntologyManager manager = OWLManager.createOWLOntologyManager();
            File file1 = new File("C://Users/najla/Desktop/MSc project/OWL API/fhkb-mostclasses-noabox.owl");
            OWLOntology mostClasses = manager.loadOntologyFromOntologyDocument(file1);
            model.addElement("List of Classes:");
            for (OWLClass cls : mostClasses.getClassesInSignature())
            {   model.addElement(String.valueOf(cls.getIRI().getFragment()));
             }
            model.addElement("List of Propereties:");
            for(OWLObjectProperty o: mostClasses.getObjectPropertiesInSignature()){
                model.addElement(String.valueOf(o.getIRI().getFragment()));
            }
            list1.setModel(model);
        }catch(OWLOntologyCreationException e )
        {
        System.err.println("OWLOntologyCreationException: " + e.getMessage()); 
        }
    }                                     

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoadOntology.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoadOntology.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoadOntology.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoadOntology.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoadOntology().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JMenuItem FhCore;
    private javax.swing.JMenuItem FhMax;
    private javax.swing.JMenuItem FhMin;
    private javax.swing.JMenuItem fExit;
    private javax.swing.JMenuItem fNew;
    private javax.swing.JMenu fOpen;
    private javax.swing.JMenuItem fSave;
    private javax.swing.JMenuItem fSaveAs;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JList list1;
    // End of variables declaration                   

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
